Index: clases A/app/src/main/java/com/example/clases/MainActivity2.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.clases\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.border\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults.buttonColors\r\nimport androidx.compose.material3.OutlinedTextField\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.focus.onFocusChanged\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.input.ImeAction\r\nimport androidx.compose.ui.text.input.KeyboardType\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.clases.classes.Json\r\nimport com.google.gson.Gson\r\nimport conexiondb.DatabaseConnector\r\nimport java.sql.PreparedStatement\r\nimport java.text.SimpleDateFormat\r\nimport java.util.Calendar\r\nimport java.util.Date\r\nimport java.util.Locale\r\n\r\nclass MainActivity2 : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            DatabaseConnector.getConnection()\r\n            Selector()\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun Selector() {\r\n    val contextMain = LocalContext.current\r\n\r\n    var cantidadPapas by remember { mutableStateOf(\"\") }\r\n    var cantidadHamb by remember { mutableStateOf(\"\") }\r\n    var cantidadHand by remember { mutableStateOf(\"\") }\r\n    var cantidadChorr by remember { mutableStateOf(\"\") }\r\n\r\n    val precioPapas by remember { mutableStateOf(\"2500\") }\r\n    val precioHamb by remember { mutableStateOf(\"4000\") }\r\n    val precioHand by remember { mutableStateOf(\"2500\") }\r\n    val precioChorr by remember { mutableStateOf(\"7000\") }\r\n\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(horizontal = 20.dp, vertical = 30.dp)\r\n            .border(\r\n                2.dp,\r\n                color = Color.Black,\r\n                shape = RoundedCornerShape(30.dp)\r\n            ),\r\n    ) {\r\n        Row (\r\n            horizontalArrangement = Arrangement.Center,\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(all = 10.dp)\r\n        ){\r\n            Text(\"Productos:\", fontSize = 30.sp)\r\n        }\r\n        Row(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(bottom = 16.dp),\r\n            horizontalArrangement = Arrangement.SpaceEvenly\r\n        ) {\r\n            Column(\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n\r\n            ) {\r\n                Image(\r\n                    painter = painterResource(id = R.drawable.hamburguesa_clasica),\r\n                    contentDescription = \"Hamburgesa\",\r\n                    modifier = Modifier\r\n                        .size(140.dp)\r\n                        .padding(10.dp)\r\n                        .clip(RoundedCornerShape(25.dp))\r\n                        .border(\r\n                            2.dp,\r\n                            color = Color.Black,\r\n                            shape = RoundedCornerShape(25.dp)\r\n                        )\r\n                )\r\n\r\n                Text(text = \"Hamburgesa\")\r\n                Text(text = \"$$precioHamb\")\r\n\r\n                OutlinedTextField(\r\n                    value = cantidadHamb,\r\n                    onValueChange = {\r\n                        if ( it != \"\") {\r\n                            cantidadPapas = \"\"\r\n                            cantidadHamb = it\r\n                            cantidadHand = \"\"\r\n                            cantidadChorr = \"\"\r\n                        }\r\n                    },\r\n                    label = { Text(\"Cantidad\") },\r\n                    textStyle = TextStyle(textAlign = TextAlign.Center),\r\n                    modifier = Modifier\r\n                        .width(100.dp)\r\n                        .padding(top = 7.dp)\r\n                        .onFocusChanged {\r\n\r\n\r\n                        },\r\n                    keyboardOptions = KeyboardOptions.Default.copy(\r\n                        imeAction = ImeAction.Next,\r\n                        keyboardType = KeyboardType.Number),\r\n                    maxLines = 1\r\n                )\r\n            }\r\n\r\n\r\n            Column(\r\n                horizontalAlignment = Alignment.CenterHorizontally,\r\n            ) {\r\n                Image(\r\n                    painter = painterResource(id = R.drawable.papas_fritas),\r\n                    contentDescription = \"Papas Fritas\",\r\n                    modifier = Modifier\r\n                        .size(140.dp)\r\n                        .padding(10.dp)\r\n                        .clip(RoundedCornerShape(25.dp))\r\n                        .border(\r\n                            2.dp,\r\n                            color = Color.Black,\r\n                            shape = RoundedCornerShape(25.dp)\r\n                        )\r\n                )\r\n                Text(text = \"Papas Fritas\")\r\n                Text(text = \"$$precioPapas\")\r\n\r\n                OutlinedTextField(\r\n                    value = cantidadPapas,\r\n                    onValueChange = {\r\n                        if ( it != \"\") {\r\n                            cantidadPapas = it\r\n                            cantidadHamb = \"\"\r\n                            cantidadHand = \"\"\r\n                            cantidadChorr = \"\"\r\n                        }\r\n                    },\r\n                    label = { Text(\"Cantidad\") },\r\n                    textStyle = TextStyle(textAlign = TextAlign.Center),\r\n                    modifier = Modifier\r\n                        .padding(top = 7.dp)\r\n                        .width(100.dp)\r\n                        .onFocusChanged {\r\n\r\n                        },\r\n                    keyboardOptions = KeyboardOptions.Default.copy(\r\n                        imeAction = ImeAction.Next,\r\n                        keyboardType = KeyboardType.Number),\r\n                    maxLines = 1\r\n                )\r\n            }\r\n        }\r\n\r\n        Row(\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(bottom = 16.dp),\r\n            horizontalArrangement = Arrangement.SpaceEvenly\r\n        ) {\r\n            Column(\r\n                horizontalAlignment = Alignment.CenterHorizontally\r\n\r\n            ) {\r\n                Image(\r\n                    painter = painterResource(id = R.drawable.handrollcongelado),\r\n                    contentDescription = \"HandRoll\",\r\n                    modifier = Modifier\r\n                        .size(140.dp)\r\n                        .padding(10.dp)\r\n                        .clip(RoundedCornerShape(25.dp))\r\n                        .border(\r\n                            2.dp,\r\n                            color = Color.Black,\r\n                            shape = RoundedCornerShape(25.dp)\r\n                        )\r\n                )\r\n                Text(text = \"HandRoll\")\r\n                Text(text = \"$$precioHand\")\r\n\r\n                OutlinedTextField(\r\n                    value = cantidadHand,\r\n                    onValueChange = {\r\n                        if ( it != \"\") {\r\n                            cantidadPapas = \"\"\r\n                            cantidadHamb = \"\"\r\n                            cantidadHand = it\r\n                            cantidadChorr = \"\"\r\n                        }\r\n                    },\r\n                    label = { Text(\"Cantidad\") },\r\n                    textStyle = TextStyle(textAlign = TextAlign.Center),\r\n                    modifier = Modifier\r\n                        .padding(top = 7.dp)\r\n                        .width(100.dp)\r\n                        .onFocusChanged {\r\n\r\n                        },\r\n                    keyboardOptions = KeyboardOptions.Default.copy(\r\n                        imeAction = ImeAction.Next,\r\n                        keyboardType = KeyboardType.Number),\r\n                    maxLines = 1\r\n                )\r\n            }\r\n\r\n\r\n\r\n\r\n            Column(\r\n                horizontalAlignment = Alignment.CenterHorizontally,\r\n            ) {\r\n                Image(\r\n                    painter = painterResource(id = R.drawable.chorrillana),\r\n                    contentDescription = \"Chorrillana\",\r\n                    modifier = Modifier\r\n                        .size(140.dp)\r\n                        .padding(10.dp)\r\n                        .clip(RoundedCornerShape(25.dp))\r\n                        .border(\r\n                            2.dp,\r\n                            color = Color.Black,\r\n                            shape = RoundedCornerShape(25.dp)\r\n                        )\r\n                )\r\n                Text(text = \"Chorrillana\")\r\n                Text(text = \"$$precioChorr\")\r\n\r\n                OutlinedTextField(\r\n                    value = cantidadChorr,\r\n                    onValueChange = {\r\n                        if ( it != \"\") {\r\n                            cantidadPapas = \"\"\r\n                            cantidadHamb = \"\"\r\n                            cantidadHand = \"\"\r\n                            cantidadChorr = it\r\n                        }\r\n                    },\r\n                    label = { Text(\"Cantidad\") },\r\n                    textStyle = TextStyle(textAlign = TextAlign.Center),\r\n                    modifier = Modifier\r\n                        .padding(top = 7.dp)\r\n                        .width(100.dp)\r\n                        .onFocusChanged { },\r\n                    keyboardOptions = KeyboardOptions.Default.copy(\r\n                        imeAction = ImeAction.Done,\r\n                        keyboardType = KeyboardType.Number),\r\n                    maxLines = 1\r\n                )\r\n            }\r\n        }\r\n\r\n    }\r\n        Row(\r\n            horizontalArrangement = Arrangement.SpaceBetween,\r\n            verticalAlignment = Alignment.Bottom,\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(all = 32.dp)\r\n        ) {\r\n            Button(\r\n                onClick = {\r\n                    cantidadHamb = \"\"\r\n                    cantidadPapas = \"\"\r\n                    cantidadHand = \"\"\r\n                    cantidadChorr = \"\"\r\n                },\r\n                colors = buttonColors(containerColor = Color.Red),\r\n                modifier = Modifier.padding(top = 16.dp, bottom = 14.dp)\r\n            ) {\r\n                Text(text = \"Borrar\")\r\n            }\r\n            Button(\r\n                onClick = {\r\n                    val produc:Array<String> = when {\r\n                        cantidadHamb != \"\" -> {\r\n                            arrayOf(\"Hamburgesa\", precioHamb, cantidadHamb)\r\n                        }\r\n\r\n                        cantidadPapas != \"\" -> {\r\n                            arrayOf(\"Papas Fritas\", precioPapas, cantidadPapas)\r\n                        }\r\n\r\n                        cantidadHand != \"\" -> {\r\n                            arrayOf(\"Handroll\", precioHand, cantidadHand)\r\n                        }\r\n\r\n                        cantidadChorr != \"\" -> {\r\n                            arrayOf(\"Chorrillana\", precioChorr, cantidadChorr)\r\n                        }\r\n\r\n                        else -> {\r\n                            arrayOf(\"None\", \"0\", \"0\")\r\n                        }\r\n                    }\r\n                    val res = calculos(produc)\r\n                    val json = transform(res)\r\n                    val xd = submitt(res,json)\r\n\r\n                    val intent = Intent(contextMain, MainActivity3::class.java)\r\n                    intent.putExtra(\"res\", res)\r\n                    contextMain.startActivity(intent)\r\n                    \r\n\r\n                },\r\n                colors = buttonColors(containerColor = Color.Green),\r\n                modifier = Modifier.padding(top = 16.dp, bottom = 14.dp)\r\n            ) {\r\n                Text(text = \"Aceptar\")\r\n            }\r\n        }\r\n}\r\n\r\n\r\n\r\nfun transform(lista: Array<String>):String {\r\n    val elem = Json(\r\n        nombre= lista[0],\r\n        cantidad= lista[2].toInt(),\r\n        iva= lista[1].toFloat().toInt(),\r\n        neto= lista[3].toFloat().toInt(),\r\n        total= lista[4].toFloat().toInt()\r\n    )\r\n    val gson = Gson()\r\n    val json = gson.toJson(elem)\r\n    return json\r\n}\r\n\r\nfun submitt(res: Array<String>, json: String): Boolean {\r\n    val conection = DatabaseConnector.getConnection()\r\n    if (conection != null) {\r\n        val currentDate: Date = Calendar.getInstance().time\r\n        val formattedDate: String =\r\n            SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault()).format(currentDate)\r\n        val query =\r\n            \"INSERT INTO venta(nombrep, neto, cantidad, iva, total, Fecha, pdf_json, codigo_user) VALUES (?,?,?,?,?,?,?,?)\"\r\n        return try {\r\n            val preparedStatement: PreparedStatement =\r\n                conection.prepareStatement(query)\r\n                    ?: return false\r\n            preparedStatement.setString(1, res[0])\r\n            preparedStatement.setInt(2, res[1].toFloat().toInt())\r\n            preparedStatement.setInt(3, res[2].toInt())\r\n            preparedStatement.setInt(4, res[3].toFloat().toInt())\r\n            preparedStatement.setInt(5, res[4].toFloat().toInt())\r\n            preparedStatement.setString(6, formattedDate)\r\n            preparedStatement.setString(7, json)\r\n            preparedStatement.setInt(8, 11)\r\n\r\n            preparedStatement.executeUpdate() > 0\r\n        } catch (e: Exception) {\r\n            e.printStackTrace()\r\n            false\r\n        } finally {\r\n            conection.close()\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\nfun calculos(productData: Array<String>) : Array<String>{\r\n    val total = productData[1].toInt() * productData[2].toInt()\r\n    val iva = total * 0.19\r\n    val neto = total - iva\r\n    // nombre, neto, cantidad, iva, total\r\n    val totalList = arrayOf(productData[0],neto.toString(),productData[2],iva.toString(),total.toString())\r\n    return totalList\r\n}\r\n\r\n\r\n\r\n
===================================================================
diff --git a/clases A/app/src/main/java/com/example/clases/MainActivity2.kt b/clases A/app/src/main/java/com/example/clases/MainActivity2.kt
--- a/clases A/app/src/main/java/com/example/clases/MainActivity2.kt	(revision 4f5e5af88abe0b22f1efa8c30b6158e77d768fc3)
+++ b/clases A/app/src/main/java/com/example/clases/MainActivity2.kt	(date 1745284171421)
@@ -40,7 +40,7 @@
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
-import com.example.clases.classes.Json
+
 import com.google.gson.Gson
 import conexiondb.DatabaseConnector
 import java.sql.PreparedStatement
